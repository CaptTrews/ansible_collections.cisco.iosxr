---
- debug: msg="START iosxr_interface cli/basic.yaml on connection={{ ansible_connection }}"

- name: Setup interface
  cisco.iosxr.iosxr_interface:
    name: GigabitEthernet0/0/0/2
    state: absent
    provider: "{{ cli }}"
  register: result


- name: Confgure interface
  cisco.iosxr.iosxr_interface:
    name: GigabitEthernet0/0/0/2
    description: test-interface-initial
    state: present
    provider: "{{ cli }}"
  register: result

- assert:
    that:
      - 'result.changed == true'
      - '"interface GigabitEthernet0/0/0/2 description test-interface-initial" in result.commands'

- name: Confgure interface (idempotent)
  cisco.iosxr.iosxr_interface:
    name: GigabitEthernet0/0/0/2
    description: test-interface-initial
    state: present
    provider: "{{ cli }}"
  register: result

- assert:
    that:
      - 'result.changed == false'

- name: Confgure interface parameters
  cisco.iosxr.iosxr_interface:
    name: GigabitEthernet0/0/0/2
    description: test-interface
    speed: 100
    duplex: half
    mtu: 512
    state: present
    provider: "{{ cli }}"
  register: result

- assert:
    that:
      - 'result.changed == true'
      - '"interface GigabitEthernet0/0/0/2 description test-interface" in result.commands'
      - '"interface GigabitEthernet0/0/0/2 speed 100" in result.commands'
      - '"interface GigabitEthernet0/0/0/2 duplex half" in result.commands'
      - '"interface GigabitEthernet0/0/0/2 mtu 512" in result.commands'

- name: Change interface parameters
  cisco.iosxr.iosxr_interface:
    name: GigabitEthernet0/0/0/2
    description: test-interface-1
    speed: 10
    duplex: full
    mtu: 256
    state: present
    provider: "{{ cli }}"
  register: result

- assert:
    that:
      - 'result.changed == true'
      - '"interface GigabitEthernet0/0/0/2 description test-interface-1" in result.commands'
      - '"interface GigabitEthernet0/0/0/2 speed 10" in result.commands'
      - '"interface GigabitEthernet0/0/0/2 duplex full" in result.commands'
      - '"interface GigabitEthernet0/0/0/2 mtu 256" in result.commands'

- name: Change interface parameters (idempotent)
  cisco.iosxr.iosxr_interface:
    name: GigabitEthernet0/0/0/2
    description: test-interface-1
    speed: 10
    duplex: full
    mtu: 256
    state: present
    provider: "{{ cli }}"
  register: result
- assert:
    that:
      - 'result.changed == false'

- name: Disable interface
  cisco.iosxr.iosxr_interface:
    name: GigabitEthernet0/0/0/2
    enabled: False
    provider: "{{ cli }}"
  register: result

- assert:
    that:
      - 'result.changed == true'
      - '"interface GigabitEthernet0/0/0/2 shutdown" in result.commands'

- name: Enable interface
  cisco.iosxr.iosxr_interface:
    name: GigabitEthernet0/0/0/2
    enabled: True
    provider: "{{ cli }}"
  register: result

- assert:
    that:
      - 'result.changed == true'
      - '"no interface GigabitEthernet0/0/0/2 shutdown" in result.commands'

- name: Confgure second interface (setup)
  cisco.iosxr.iosxr_interface:
    name: GigabitEthernet0/0/0/3
    description: test-interface-initial
    state: present
    provider: "{{ cli }}"
  register: result

- assert:
    that:
      - 'result.changed == true'
      - '"interface GigabitEthernet0/0/0/3 description test-interface-initial" in result.commands'

- name: Delete interface aggregate (setup)
  cisco.iosxr.iosxr_interface:
    aggregate:
    - name: GigabitEthernet0/0/0/3
    - name: GigabitEthernet0/0/0/2
    state: absent
    provider: "{{ cli }}"

- name: Add interface aggregate
  cisco.iosxr.iosxr_interface:
    aggregate:
    - { name: GigabitEthernet0/0/0/3, mtu: 256, description: test-interface-1 }
    - { name: GigabitEthernet0/0/0/2, mtu: 516, description: test-interface-2 }
    speed: 100
    duplex: full
    state: present
    provider: "{{ cli }}"
  register: result

- assert:
    that:
      - 'result.changed == true'
      - '"interface GigabitEthernet0/0/0/3 speed 100" in result.commands'
      - '"interface GigabitEthernet0/0/0/3 description test-interface-1" in result.commands'
      - '"interface GigabitEthernet0/0/0/3 duplex full" in result.commands'
      - '"interface GigabitEthernet0/0/0/3 mtu 256" in result.commands'
      - '"interface GigabitEthernet0/0/0/2 speed 100" in result.commands'
      - '"interface GigabitEthernet0/0/0/2 description test-interface-2" in result.commands'
      - '"interface GigabitEthernet0/0/0/2 duplex full" in result.commands'
      - '"interface GigabitEthernet0/0/0/2 mtu 516" in result.commands'


- name: Add interface aggregate (idempotent)
  cisco.iosxr.iosxr_interface:
    aggregate:
    - { name: GigabitEthernet0/0/0/3, mtu: 256, description: test-interface-1 }
    - { name: GigabitEthernet0/0/0/2, mtu: 516, description: test-interface-2 }
    speed: 100
    duplex: full
    state: present
    provider: "{{ cli }}"
  register: result

- assert:
    that:
      - 'result.changed == false'

- name: Disable interface aggregate
  cisco.iosxr.iosxr_interface:
    aggregate:
    - name: GigabitEthernet0/0/0/3
    - name: GigabitEthernet0/0/0/2
    enabled: False
    state: present
    provider: "{{ cli }}"
  register: result

- assert:
    that:
      - 'result.changed == true'
      - '"interface GigabitEthernet0/0/0/3 shutdown" in result.commands'
      - '"interface GigabitEthernet0/0/0/2 shutdown" in result.commands'

- name: Enable interface aggregate
  cisco.iosxr.iosxr_interface:
    aggregate:
    - name: GigabitEthernet0/0/0/3
    - name: GigabitEthernet0/0/0/2
    enabled: True
    state: present
    provider: "{{ cli }}"
  register: result

- assert:
    that:
      - 'result.changed == true'
      - '"no interface GigabitEthernet0/0/0/3 shutdown" in result.commands'
      - '"no interface GigabitEthernet0/0/0/2 shutdown" in result.commands'

- name: interface aggregate (setup)
  cisco.iosxr.iosxr_interface:
    aggregate:
    - name: GigabitEthernet0/0/0/4
    - name: GigabitEthernet0/0/0/5
    description: test-interface-initial
    provider: "{{ cli }}"
  register: result

- name: Create interface aggregate
  cisco.iosxr.iosxr_interface:
    aggregate:
    - name: GigabitEthernet0/0/0/4
      description: test_interface_1
    - name: GigabitEthernet0/0/0/5
      description: test_interface_2
    state: present
    provider: "{{ cli }}"
  register: result

- assert:
    that:
      - 'result.changed == true'
      - '"interface GigabitEthernet0/0/0/4 description test_interface_1" in result.commands'
      - '"interface GigabitEthernet0/0/0/5 description test_interface_2" in result.commands'

- name: Delete interface aggregate
  cisco.iosxr.iosxr_interface:
    aggregate:
    - name: GigabitEthernet0/0/0/2
    - name: GigabitEthernet0/0/0/3
    - name: GigabitEthernet0/0/0/4
    - name: GigabitEthernet0/0/0/5
    state: absent
    provider: "{{ cli }}"
  register: result

- assert:
    that:
      - 'result.changed == true'
      - '"no interface GigabitEthernet0/0/0/4" in result.commands'
      - '"no interface GigabitEthernet0/0/0/5" in result.commands'

- name: Delete interface aggregate (idempotent)
  cisco.iosxr.iosxr_interface:
    aggregate:
    - name: GigabitEthernet0/0/0/2
    - name: GigabitEthernet0/0/0/3
    - name: GigabitEthernet0/0/0/4
    - name: GigabitEthernet0/0/0/5
    state: absent
    provider: "{{ cli }}"
  register: result

- assert:
    that:
      - 'result.changed == false'

- debug: msg="END iosxr_interface cli/basic.yaml on connection={{ ansible_connection }}"
